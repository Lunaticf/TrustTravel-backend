package org.fisco.bcos.solidity;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.fisco.bcos.channel.client.TransactionSucCallback;
import org.fisco.bcos.web3j.abi.TypeReference;
import org.fisco.bcos.web3j.abi.datatypes.Address;
import org.fisco.bcos.web3j.abi.datatypes.Bool;
import org.fisco.bcos.web3j.abi.datatypes.Function;
import org.fisco.bcos.web3j.abi.datatypes.Type;
import org.fisco.bcos.web3j.abi.datatypes.Utf8String;
import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;
import org.fisco.bcos.web3j.crypto.Credentials;
import org.fisco.bcos.web3j.protocol.Web3j;
import org.fisco.bcos.web3j.protocol.core.RemoteCall;
import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.fisco.bcos.web3j.tuples.generated.Tuple2;
import org.fisco.bcos.web3j.tuples.generated.Tuple3;
import org.fisco.bcos.web3j.tuples.generated.Tuple4;
import org.fisco.bcos.web3j.tuples.generated.Tuple5;
import org.fisco.bcos.web3j.tx.Contract;
import org.fisco.bcos.web3j.tx.TransactionManager;
import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version none.
 */
@SuppressWarnings("unchecked")
public class TrustTravel extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b506142c1806100206000396000f30060806040526004361061013e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630adc61a3146101435780630e887cda1461019a57806310056fff146101f15780631959a0021461029a5780633a74ab131461035d5780635983e974146103b45780635f0c6acf1461040b57806364a09279146105715780636e0409c91461069c5780638d248a08146107c7578063962a70431461081e578063991a74d61461095e578063a31ae8f614610b1d578063aa99d35814610cd2578063ae20314614610d5b578063b7c74ff114610e17578063b8d04f3414610f50578063ba99af7014611090578063cd19e0581461114c578063d84f55ee146112f1578063e9a734ff146113ad578063ef77687e14611474578063f4704264146115e3578063f5ecbdfe146117f4575b600080fd5b34801561014f57600080fd5b50610184600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061192d565b6040518082815260200191505060405180910390f35b3480156101a657600080fd5b506101db600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061197b565b6040518082815260200191505060405180910390f35b3480156101fd57600080fd5b50610258600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506119c6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102a657600080fd5b506102db600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a5e565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610321578082015181840152602081019050610306565b50505050905090810190601f16801561034e5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561036957600080fd5b5061039e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b1a565b6040518082815260200191505060405180910390f35b3480156103c057600080fd5b506103f5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b68565b6040518082815260200191505060405180910390f35b34801561041757600080fd5b506104b8600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611bb6565b6040518084151515158152602001806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015610534578082015181840152602081019050610519565b50505050905090810190601f1680156105615780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561057d57600080fd5b5061061660048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190505050611e00565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610660578082015181840152602081019050610645565b50505050905090810190601f16801561068d5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156106a857600080fd5b5061074160048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190505050611fbc565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561078b578082015181840152602081019050610770565b50505050905090810190601f1680156107b85780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156107d357600080fd5b50610808600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612178565b6040518082815260200191505060405180910390f35b34801561082a57600080fd5b5061086960048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121c6565b604051808060200185815260200180602001848152602001838103835287818151815260200191508051906020019080838360005b838110156108b957808201518184015260208101905061089e565b50505050905090810190601f1680156108e65780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561091f578082015181840152602081019050610904565b50505050905090810190601f16801561094c5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b34801561096a57600080fd5b50610a2b600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124ac565b60405180841515151581526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610a79578082015181840152602081019050610a5e565b50505050905090810190601f168015610aa65780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610adf578082015181840152602081019050610ac4565b50505050905090810190601f168015610b0c5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b348015610b2957600080fd5b50610cd0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190803590602001909291905050506126fb565b005b348015610cde57600080fd5b50610d59600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050612936565b005b348015610d6757600080fd5b50610d9c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612990565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ddc578082015181840152602081019050610dc1565b50505050905090810190601f168015610e095780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610e2357600080fd5b50610e6260048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a71565b604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610eac578082015181840152602081019050610e91565b50505050905090810190601f168015610ed95780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610f12578082015181840152602081019050610ef7565b50505050905090810190601f168015610f3f5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b348015610f5c57600080fd5b50610f9b60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612cea565b604051808060200185815260200180602001848152602001838103835287818151815260200191508051906020019080838360005b83811015610feb578082015181840152602081019050610fd0565b50505050905090810190601f1680156110185780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015611051578082015181840152602081019050611036565b50505050905090810190601f16801561107e5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b34801561109c57600080fd5b506110d1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612fd0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156111115780820151818401526020810190506110f6565b50505050905090810190601f16801561113e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561115857600080fd5b5061119760048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613080565b60405180806020018060200180602001858152602001848103845288818151815260200191508051906020019080838360005b838110156111e55780820151818401526020810190506111ca565b50505050905090810190601f1680156112125780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b8381101561124b578082015181840152602081019050611230565b50505050905090810190601f1680156112785780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b838110156112b1578082015181840152602081019050611296565b50505050905090810190601f1680156112de5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b3480156112fd57600080fd5b50611332600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061340b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015611372578082015181840152602081019050611357565b50505050905090810190601f16801561139f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156113b957600080fd5b5061145a600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506134ee565b604051808215151515815260200191505060405180910390f35b34801561148057600080fd5b506115e1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192908035906020019092919050505061369f565b005b3480156115ef57600080fd5b5061162e60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506138b6565b604051808060200180602001806020018060200186815260200185810385528a818151815260200191508051906020019080838360005b83811015611680578082015181840152602081019050611665565b50505050905090810190601f1680156116ad5780820380516001836020036101000a031916815260200191505b50858103845289818151815260200191508051906020019080838360005b838110156116e65780820151818401526020810190506116cb565b50505050905090810190601f1680156117135780820380516001836020036101000a031916815260200191505b50858103835288818151815260200191508051906020019080838360005b8381101561174c578082015181840152602081019050611731565b50505050905090810190601f1680156117795780820380516001836020036101000a031916815260200191505b50858103825287818151815260200191508051906020019080838360005b838110156117b2578082015181840152602081019050611797565b50505050905090810190601f1680156117df5780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b34801561180057600080fd5b5061183f60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613d48565b604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561188957808201518184015260208101905061186e565b50505050905090810190601f1680156118b65780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156118ef5780820151818401526020810190506118d4565b50505050905090810190601f16801561191c5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501805490509050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b60006002826040518082805190602001908083835b602083101515611a0057805182526020820191506020810190506020830392506119db565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b0a5780601f10611adf57610100808354040283529160200191611b0a565b820191906000526020600020905b815481529060010190602001808311611aed57829003601f168201915b5050505050908060010154905082565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401805490509050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201805490509050919050565b600060606000611ccc6002866040518082805190602001908083835b602083101515611bf75780518252602082019150602081019050602083039250611bd2565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cc15780601f10611c9657610100808354040283529160200191611cc1565b820191906000526020600020905b815481529060010190602001808311611ca457829003601f168201915b5050505050856134ee565b15611da45760016002866040518082805190602001908083835b602083101515611d0b5780518252602082019150602081019050602083039250611ce6565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040805190810160405280601081526020017f4c6f67696e207375636365737366756c0000000000000000000000000000000081525090925092509250611df9565b60007379a7a47806d2dfee07b42662c4f65816461d14d26040805190810160405280600a81526020017f4c6f67696e206661696c00000000000000000000000000000000000000000000815250909250925092505b9250925092565b60006060611e0c61400c565b60016000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020189815481101515611e5c57fe5b9060005260206000209060090201600801541415611f74576060604051908101604052808781526020018681526020018581525090506000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018190806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001556020820151816001019080519060200190611f2592919061402e565b506040820151816002015550505060016040805190810160405280600b81526020017f7375636365737366756c2100000000000000000000000000000000000000000081525092509250611fb1565b60006040805190810160405280600581526020017f6661696c21000000000000000000000000000000000000000000000000000000815250925092505b509550959350505050565b60006060611fc86140ae565b60016000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018981548110151561201857fe5b9060005260206000209060080201600701541415612130576060604051908101604052808781526020018681526020018581525090506000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050181908060018154018082558091505090600182039060005260206000209060030201600090919290919091506000820151816000015560208201518160010190805190602001906120e192919061402e565b506040820151816002015550505060016040805190810160405280600b81526020017f7375636365737366756c210000000000000000000000000000000000000000008152509250925061216d565b60006040805190810160405280600581526020017f6661696c21000000000000000000000000000000000000000000000000000000815250925092505b509550959350505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301805490509050919050565b6060600060606000806000606060008060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018a81548110151561222357fe5b906000526020600020906008020160010160020193506000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005018a81548110151561228757fe5b90600052602060002090600302016000015492506000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005018a8154811015156122e957fe5b90600052602060002090600302016001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561238e5780601f106123635761010080835404028352916020019161238e565b820191906000526020600020905b81548152906001019060200180831161237157829003601f168201915b505050505091506000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005018a8154811015156123e357fe5b906000526020600020906003020160020154905083838383838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124905780601f1061246557610100808354040283529160200191612490565b820191906000526020600020905b81548152906001019060200180831161247357829003601f168201915b5050505050935097509750975097505050505092959194509250565b6000606080600073ffffffffffffffffffffffffffffffffffffffff166002876040518082805190602001908083835b60208310151561250157805182526020820191506020810190506020830392506124dc565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561257a57600080fd5b846002876040518082805190602001908083835b6020831015156125b3578051825260208201915060208101905060208303925061258e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000190805190602001906125fc9291906140d0565b50836002876040518082805190602001908083835b6020831015156126365780518252602082019150602081019050602083039250612611565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506126b384613fc1565b6001866040805190810160405280601481526020017f5265676973746572207375636365737366756c2100000000000000000000000081525092509250925093509350939050565b612703614150565b61270b614180565b60a0604051908101604052808a815260200189815260200188815260200187815260200185815250915060a0604051908101604052804281526020018381526020018681526020016040805190810160405280600e81526020017f696e697469616c697a6174696f6e00000000000000000000000000000000000081525081526020018481525090506000808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819080600181540180825580915050906001820390600052602060002090600902016000909192909190915060008201518160000155602082015181600101600082015181600001908051906020019061283092919061402e565b50602082015181600101908051906020019061284d92919061402e565b50604082015181600201908051906020019061286a92919061402e565b50606082015181600301908051906020019061288792919061402e565b5060808201518160040155505060408201518160060190805190602001906128b092919061402e565b5060608201518160070190805190602001906128cd92919061402e565b5060808201518160080155505050836000808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254039250508190555050505050505050505050565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001908051906020019061298b9291906140d0565b505050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a655780601f10612a3a57610100808354040283529160200191612a65565b820191906000526020600020905b815481529060010190602001808311612a4857829003601f168201915b50505050509050919050565b600060608060008060008060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020188815481101515612ac957fe5b90600052602060002090600902016000015492506000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020188815481101515612b2b57fe5b906000526020600020906009020160060191506000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020188815481101515612b8c57fe5b90600052602060002090600902016007019050828282818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612c375780601f10612c0c57610100808354040283529160200191612c37565b820191906000526020600020905b815481529060010190602001808311612c1a57829003601f168201915b50505050509150808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612cd35780601f10612ca857610100808354040283529160200191612cd3565b820191906000526020600020905b815481529060010190602001808311612cb657829003601f168201915b505050505090509550955095505050509250925092565b6060600060606000806000606060008060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018a815481101515612d4757fe5b906000526020600020906009020160010160000193506000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018a815481101515612dab57fe5b90600052602060002090600302016000015492506000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018a815481101515612e0d57fe5b90600052602060002090600302016001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612eb25780601f10612e8757610100808354040283529160200191612eb2565b820191906000526020600020905b815481529060010190602001808311612e9557829003601f168201915b505050505091506000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018a815481101515612f0757fe5b906000526020600020906003020160020154905083838383838054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612fb45780601f10612f8957610100808354040283529160200191612fb4565b820191906000526020600020905b815481529060010190602001808311612f9757829003601f168201915b5050505050935097509750975097505050505092959194509250565b60016020528060005260406000206000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156130785780601f1061304d57610100808354040283529160200191613078565b820191906000526020600020905b81548152906001019060200180831161305b57829003601f168201915b505050505081565b606080606060008060008060008060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018a8154811015156130db57fe5b906000526020600020906008020160010160000193506000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018a81548110151561313f57fe5b906000526020600020906008020160010160010192506000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018a8154811015156131a357fe5b906000526020600020906008020160010160020191506000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018a81548110151561320757fe5b906000526020600020906008020160010160030154905083838383838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156132b75780601f1061328c576101008083540402835291602001916132b7565b820191906000526020600020905b81548152906001019060200180831161329a57829003601f168201915b50505050509350828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156133535780601f1061332857610100808354040283529160200191613353565b820191906000526020600020905b81548152906001019060200180831161333657829003601f168201915b50505050509250818054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156133ef5780601f106133c4576101008083540402835291602001916133ef565b820191906000526020600020905b8154815290600101906020018083116133d257829003601f168201915b5050505050915097509750975097505050505092959194509250565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156134e25780601f106134b7576101008083540402835291602001916134e2565b820191906000526020600020905b8154815290600101906020018083116134c557829003601f168201915b50505050509050919050565b6000816040516020018082805190602001908083835b6020831015156135295780518252602082019150602081019050602083039250613504565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515613592578051825260208201915060208101905060208303925061356d565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916836040516020018082805190602001908083835b6020831015156135fc57805182526020820191506020810190506020830392506135d7565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156136655780518252602082019150602081019050602083039250613640565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191614905092915050565b6136a76141b7565b6136af6141e0565b60806040519081016040528089815260200188815260200187815260200186815250915060a0604051908101604052804281526020018381526020018581526020016040805190810160405280600e81526020017f696e697469616c697a6174696f6e00000000000000000000000000000000000081525081526020018481525090506000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181908060018154018082558091505090600182039060005260206000209060080201600090919290919091506000820151816000015560208201518160010160008201518160000190805190602001906137ce92919061402e565b5060208201518160010190805190602001906137eb92919061402e565b50604082015181600201908051906020019061380892919061402e565b50606082015181600301555050604082015181600501908051906020019061383192919061402e565b50606082015181600601908051906020019061384e92919061402e565b5060808201518160070155505050846000808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282540392505081905550505050505050505050565b6060806060806000806000806000806000808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018c81548110151561391357fe5b906000526020600020906009020160010160000194506000808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018c81548110151561397757fe5b906000526020600020906009020160010160010193506000808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018c8154811015156139db57fe5b906000526020600020906009020160010160020192506000808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018c815481101515613a3f57fe5b906000526020600020906009020160010160030191506000808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018c815481101515613aa357fe5b90600052602060002090600902016001016004015490508484848484848054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613b545780601f10613b2957610100808354040283529160200191613b54565b820191906000526020600020905b815481529060010190602001808311613b3757829003601f168201915b50505050509450838054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613bf05780601f10613bc557610100808354040283529160200191613bf0565b820191906000526020600020905b815481529060010190602001808311613bd357829003601f168201915b50505050509350828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613c8c5780601f10613c6157610100808354040283529160200191613c8c565b820191906000526020600020905b815481529060010190602001808311613c6f57829003601f168201915b50505050509250818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613d285780601f10613cfd57610100808354040283529160200191613d28565b820191906000526020600020905b815481529060010190602001808311613d0b57829003601f168201915b505050505091509950995099509950995050505050509295509295909350565b600060608060008060008060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030188815481101515613da057fe5b90600052602060002090600802016000015492506000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030188815481101515613e0257fe5b906000526020600020906008020160050191506000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030188815481101515613e6357fe5b90600052602060002090600802016006019050828282818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613f0e5780601f10613ee357610100808354040283529160200191613f0e565b820191906000526020600020905b815481529060010190602001808311613ef157829003601f168201915b50505050509150808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613faa5780601f10613f7f57610100808354040283529160200191613faa565b820191906000526020600020905b815481529060010190602001808311613f8d57829003601f168201915b505050505090509550955095505050509250925092565b6127106000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b6060604051908101604052806000815260200160608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061406f57805160ff191683800117855561409d565b8280016001018555821561409d579182015b8281111561409c578251825591602001919060010190614081565b5b5090506140aa9190614217565b5090565b6060604051908101604052806000815260200160608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061411157805160ff191683800117855561413f565b8280016001018555821561413f579182015b8281111561413e578251825591602001919060010190614123565b5b50905061414c9190614217565b5090565b60a06040519081016040528060608152602001606081526020016060815260200160608152602001600081525090565b610120604051908101604052806000815260200161419c61423c565b81526020016060815260200160608152602001600081525090565b608060405190810160405280606081526020016060815260200160608152602001600081525090565b61010060405190810160405280600081526020016141fc61426c565b81526020016060815260200160608152602001600081525090565b61423991905b8082111561423557600081600090555060010161421d565b5090565b90565b60a06040519081016040528060608152602001606081526020016060815260200160608152602001600081525090565b6080604051908101604052806060815260200160608152602001606081526020016000815250905600a165627a7a723058202c2e87826b885ccc1326e693a45a63404ac0863444e683f8726705cea63175920029";

    public static final String ABI = "[{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getUserCommentSceneCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getUserMoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"username\",\"type\":\"string\"}],\"name\":\"GetUserAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"name\":\"userName\",\"type\":\"string\"},{\"name\":\"Owner_money\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getUserCommentHotelCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getUserOrdersCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"passwd\",\"type\":\"string\"}],\"name\":\"UserLogin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idx\",\"type\":\"uint256\"},{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"time\",\"type\":\"uint256\"},{\"name\":\"content\",\"type\":\"string\"},{\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"addCommentForHotel\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idx\",\"type\":\"uint256\"},{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"time\",\"type\":\"uint256\"},{\"name\":\"content\",\"type\":\"string\"},{\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"addCommentForScene\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getUserSceneCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_idx\",\"type\":\"uint256\"},{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getCommentInfoForScene\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"passwd\",\"type\":\"string\"},{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"UserRegister\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_hotel\",\"type\":\"string\"},{\"name\":\"_roomType\",\"type\":\"string\"},{\"name\":\"_fromDate\",\"type\":\"string\"},{\"name\":\"_toDate\",\"type\":\"string\"},{\"name\":\"_OTA\",\"type\":\"string\"},{\"name\":\"_totalPrice\",\"type\":\"uint256\"},{\"name\":\"f2\",\"type\":\"uint256\"}],\"name\":\"initializeOrder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"changeUserName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getAccountType\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_idx\",\"type\":\"uint256\"},{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getUserOrdersInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_idx\",\"type\":\"uint256\"},{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getCommentInfoForHotel\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"accountType\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_idx\",\"type\":\"uint256\"},{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getUserOtherScene\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getUserName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"s1\",\"type\":\"string\"},{\"name\":\"s2\",\"type\":\"string\"}],\"name\":\"compareStringsbyBytes\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_province\",\"type\":\"string\"},{\"name\":\"_city\",\"type\":\"string\"},{\"name\":\"s_name\",\"type\":\"string\"},{\"name\":\"s_price\",\"type\":\"uint256\"},{\"name\":\"_OTA\",\"type\":\"string\"},{\"name\":\"f1\",\"type\":\"uint256\"}],\"name\":\"bookOrder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_idx\",\"type\":\"uint256\"},{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getUserOrdersRoom\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_idx\",\"type\":\"uint256\"},{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getUserSceneOrdersInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]";

    public static final String FUNC_GETUSERCOMMENTSCENECOUNT = "getUserCommentSceneCount";

    public static final String FUNC_GETUSERMONEY = "getUserMoney";

    public static final String FUNC_GETUSERADDRESS = "GetUserAddress";

    public static final String FUNC_USERINFO = "userInfo";

    public static final String FUNC_GETUSERCOMMENTHOTELCOUNT = "getUserCommentHotelCount";

    public static final String FUNC_GETUSERORDERSCOUNT = "getUserOrdersCount";

    public static final String FUNC_USERLOGIN = "UserLogin";

    public static final String FUNC_ADDCOMMENTFORHOTEL = "addCommentForHotel";

    public static final String FUNC_ADDCOMMENTFORSCENE = "addCommentForScene";

    public static final String FUNC_GETUSERSCENECOUNT = "getUserSceneCount";

    public static final String FUNC_GETCOMMENTINFOFORSCENE = "getCommentInfoForScene";

    public static final String FUNC_USERREGISTER = "UserRegister";

    public static final String FUNC_INITIALIZEORDER = "initializeOrder";

    public static final String FUNC_CHANGEUSERNAME = "changeUserName";

    public static final String FUNC_GETACCOUNTTYPE = "getAccountType";

    public static final String FUNC_GETUSERORDERSINFO = "getUserOrdersInfo";

    public static final String FUNC_GETCOMMENTINFOFORHOTEL = "getCommentInfoForHotel";

    public static final String FUNC_ACCOUNTTYPE = "accountType";

    public static final String FUNC_GETUSEROTHERSCENE = "getUserOtherScene";

    public static final String FUNC_GETUSERNAME = "getUserName";

    public static final String FUNC_COMPARESTRINGSBYBYTES = "compareStringsbyBytes";

    public static final String FUNC_BOOKORDER = "bookOrder";

    public static final String FUNC_GETUSERORDERSROOM = "getUserOrdersRoom";

    public static final String FUNC_GETUSERSCENEORDERSINFO = "getUserSceneOrdersInfo";

    @Deprecated
    protected TrustTravel(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected TrustTravel(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected TrustTravel(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected TrustTravel(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<BigInteger> getUserCommentSceneCount(String _addr) {
        final Function function = new Function(FUNC_GETUSERCOMMENTSCENECOUNT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getUserMoney(String _addr) {
        final Function function = new Function(FUNC_GETUSERMONEY, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> GetUserAddress(String username) {
        final Function function = new Function(FUNC_GETUSERADDRESS, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(username)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<Tuple2<String, BigInteger>> userInfo(String param0) {
        final Function function = new Function(FUNC_USERINFO, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple2<String, BigInteger>>(
                new Callable<Tuple2<String, BigInteger>>() {
                    @Override
                    public Tuple2<String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue());
                    }
                });
    }

    public RemoteCall<BigInteger> getUserCommentHotelCount(String _addr) {
        final Function function = new Function(FUNC_GETUSERCOMMENTHOTELCOUNT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getUserOrdersCount(String _addr) {
        final Function function = new Function(FUNC_GETUSERORDERSCOUNT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Tuple3<Boolean, String, String>> UserLogin(String username, String passwd) {
        final Function function = new Function(FUNC_USERLOGIN, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(username), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(passwd)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
        return new RemoteCall<Tuple3<Boolean, String, String>>(
                new Callable<Tuple3<Boolean, String, String>>() {
                    @Override
                    public Tuple3<Boolean, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<Boolean, String, String>(
                                (Boolean) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> addCommentForHotel(BigInteger _idx, String _addr, BigInteger time, String content, BigInteger score) {
        final Function function = new Function(
                FUNC_ADDCOMMENTFORHOTEL, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_idx), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_addr), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(time), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(content), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(score)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void addCommentForHotel(BigInteger _idx, String _addr, BigInteger time, String content, BigInteger score, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_ADDCOMMENTFORHOTEL, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_idx), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_addr), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(time), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(content), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(score)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String addCommentForHotelSeq(BigInteger _idx, String _addr, BigInteger time, String content, BigInteger score) {
        final Function function = new Function(
                FUNC_ADDCOMMENTFORHOTEL, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_idx), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_addr), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(time), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(content), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(score)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> addCommentForScene(BigInteger _idx, String _addr, BigInteger time, String content, BigInteger score) {
        final Function function = new Function(
                FUNC_ADDCOMMENTFORSCENE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_idx), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_addr), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(time), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(content), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(score)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void addCommentForScene(BigInteger _idx, String _addr, BigInteger time, String content, BigInteger score, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_ADDCOMMENTFORSCENE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_idx), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_addr), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(time), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(content), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(score)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String addCommentForSceneSeq(BigInteger _idx, String _addr, BigInteger time, String content, BigInteger score) {
        final Function function = new Function(
                FUNC_ADDCOMMENTFORSCENE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_idx), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_addr), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(time), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(content), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(score)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<BigInteger> getUserSceneCount(String _addr) {
        final Function function = new Function(FUNC_GETUSERSCENECOUNT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Tuple4<String, BigInteger, String, BigInteger>> getCommentInfoForScene(BigInteger _idx, String _addr) {
        final Function function = new Function(FUNC_GETCOMMENTINFOFORSCENE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_idx), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple4<String, BigInteger, String, BigInteger>>(
                new Callable<Tuple4<String, BigInteger, String, BigInteger>>() {
                    @Override
                    public Tuple4<String, BigInteger, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<String, BigInteger, String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> UserRegister(String username, String passwd, String _addr) {
        final Function function = new Function(
                FUNC_USERREGISTER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(username), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(passwd), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_addr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void UserRegister(String username, String passwd, String _addr, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_USERREGISTER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(username), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(passwd), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_addr)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String UserRegisterSeq(String username, String passwd, String _addr) {
        final Function function = new Function(
                FUNC_USERREGISTER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(username), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(passwd), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_addr)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> initializeOrder(String _addr, String _hotel, String _roomType, String _fromDate, String _toDate, String _OTA, BigInteger _totalPrice, BigInteger f2) {
        final Function function = new Function(
                FUNC_INITIALIZEORDER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_addr), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_hotel), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_roomType), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_fromDate), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_toDate), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_OTA), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_totalPrice), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(f2)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void initializeOrder(String _addr, String _hotel, String _roomType, String _fromDate, String _toDate, String _OTA, BigInteger _totalPrice, BigInteger f2, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_INITIALIZEORDER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_addr), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_hotel), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_roomType), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_fromDate), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_toDate), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_OTA), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_totalPrice), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(f2)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String initializeOrderSeq(String _addr, String _hotel, String _roomType, String _fromDate, String _toDate, String _OTA, BigInteger _totalPrice, BigInteger f2) {
        final Function function = new Function(
                FUNC_INITIALIZEORDER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_addr), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_hotel), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_roomType), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_fromDate), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_toDate), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_OTA), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_totalPrice), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(f2)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> changeUserName(String _addr, String _name) {
        final Function function = new Function(
                FUNC_CHANGEUSERNAME, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_addr), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void changeUserName(String _addr, String _name, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_CHANGEUSERNAME, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_addr), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String changeUserNameSeq(String _addr, String _name) {
        final Function function = new Function(
                FUNC_CHANGEUSERNAME, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_addr), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<String> getAccountType(String _addr) {
        final Function function = new Function(FUNC_GETACCOUNTTYPE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<Tuple3<BigInteger, String, String>> getUserOrdersInfo(BigInteger _idx, String _addr) {
        final Function function = new Function(FUNC_GETUSERORDERSINFO, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_idx), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple3<BigInteger, String, String>>(
                new Callable<Tuple3<BigInteger, String, String>>() {
                    @Override
                    public Tuple3<BigInteger, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<BigInteger, String, String>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue());
                    }
                });
    }

    public RemoteCall<Tuple4<String, BigInteger, String, BigInteger>> getCommentInfoForHotel(BigInteger _idx, String _addr) {
        final Function function = new Function(FUNC_GETCOMMENTINFOFORHOTEL, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_idx), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple4<String, BigInteger, String, BigInteger>>(
                new Callable<Tuple4<String, BigInteger, String, BigInteger>>() {
                    @Override
                    public Tuple4<String, BigInteger, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<String, BigInteger, String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue());
                    }
                });
    }

    public RemoteCall<String> accountType(String param0) {
        final Function function = new Function(FUNC_ACCOUNTTYPE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<Tuple4<String, String, String, BigInteger>> getUserOtherScene(BigInteger _idx, String _addr) {
        final Function function = new Function(FUNC_GETUSEROTHERSCENE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_idx), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple4<String, String, String, BigInteger>>(
                new Callable<Tuple4<String, String, String, BigInteger>>() {
                    @Override
                    public Tuple4<String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<String, String, String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue());
                    }
                });
    }

    public RemoteCall<String> getUserName(String _addr) {
        final Function function = new Function(FUNC_GETUSERNAME, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<Boolean> compareStringsbyBytes(String s1, String s2) {
        final Function function = new Function(FUNC_COMPARESTRINGSBYBYTES, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(s1), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(s2)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> bookOrder(String _addr, String _province, String _city, String s_name, BigInteger s_price, String _OTA, BigInteger f1) {
        final Function function = new Function(
                FUNC_BOOKORDER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_addr), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_province), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_city), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(s_name), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(s_price), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_OTA), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(f1)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void bookOrder(String _addr, String _province, String _city, String s_name, BigInteger s_price, String _OTA, BigInteger f1, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_BOOKORDER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_addr), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_province), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_city), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(s_name), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(s_price), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_OTA), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(f1)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String bookOrderSeq(String _addr, String _province, String _city, String s_name, BigInteger s_price, String _OTA, BigInteger f1) {
        final Function function = new Function(
                FUNC_BOOKORDER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_addr), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_province), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_city), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(s_name), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(s_price), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_OTA), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(f1)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<Tuple5<String, String, String, String, BigInteger>> getUserOrdersRoom(BigInteger _idx, String _addr) {
        final Function function = new Function(FUNC_GETUSERORDERSROOM, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_idx), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple5<String, String, String, String, BigInteger>>(
                new Callable<Tuple5<String, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple5<String, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteCall<Tuple3<BigInteger, String, String>> getUserSceneOrdersInfo(BigInteger _idx, String _addr) {
        final Function function = new Function(FUNC_GETUSERSCENEORDERSINFO, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_idx), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple3<BigInteger, String, String>>(
                new Callable<Tuple3<BigInteger, String, String>>() {
                    @Override
                    public Tuple3<BigInteger, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<BigInteger, String, String>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue());
                    }
                });
    }

    @Deprecated
    public static TrustTravel load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new TrustTravel(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static TrustTravel load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new TrustTravel(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static TrustTravel load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new TrustTravel(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static TrustTravel load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new TrustTravel(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<TrustTravel> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(TrustTravel.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<TrustTravel> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(TrustTravel.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<TrustTravel> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(TrustTravel.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<TrustTravel> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(TrustTravel.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
